(()=>{"use strict";var n={208:(n,e,t)=>{t.d(e,{A:()=>s});var r=t(354),a=t.n(r),o=t(314),i=t.n(o)()(a());i.push([n.id,':root {\n    /* Color theme */\n    --ct-darker: #2d2d2d;\n    --ct-dark: #3d3d3d;\n    --ct-grey: #535353;\n    --ct-numix: #d64937;\n    --ct-blue: #379cd6;\n    --ct-green: #5cd637;\n    --ct-light: #dcdcdc;\n    --ct-white: #ffffff;\n    /* Color theme (filter) for SVG images */\n    --filter-darker: invert(11%) sepia(0%) saturate(0%) hue-rotate(217deg)\n        brightness(102%) contrast(84%);\n    --filter-dark: invert(15%) sepia(0%) saturate(1327%) hue-rotate(271deg)\n        brightness(101%) contrast(74%);\n    --filter-grey: invert(32%) sepia(0%) saturate(0%) hue-rotate(320deg)\n        brightness(95%) contrast(89%);\n    --filter-numix: invert(34%) sepia(22%) saturate(6773%) hue-rotate(345deg)\n        brightness(92%) contrast(80%);\n    --filter-light: invert(99%) sepia(0%) saturate(4028%) hue-rotate(193deg)\n        brightness(123%) contrast(73%);\n    --filter-white: invert(93%) sepia(100%) saturate(0%) hue-rotate(37deg)\n        brightness(105%) contrast(102%);\n\n    /* Elements height */\n    --navbar-h: 3.8rem;\n    --side-panel-length: 15rem;\n    --content-h: calc(\n        100vh - var(--navbar-h) - var(--footer-h) - var(--side-panel-length)\n    );\n    --footer-h: 3rem;\n\n    /* Font size */\n    --logo-fs: 1.3rem;\n    --navbar-fs: 1rem;\n    --header-fs: 1.8rem;\n    --subheader-fs: 1.4rem;\n    --subheader-sm-fs: 1.3rem;\n    --content-fs: 0.9rem;\n\n    --taskRow-h: 4rem;\n}\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",\n        "Lucida Sans Unicode", Geneva, Verdana, sans-serif;\n    color: var(--ct-darker);\n}\n\nbody {\n    background-color: var(--ct-light);\n    padding: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 2rem;\n    width: 100%;\n    height: 100vh;\n}\n\n/* --------------------- Form Container -------------------- */\n.form-container {\n    margin-top: 2rem;\n    text-align: center;\n    display: flex;\n    gap: 0.5rem;\n    flex-direction: column;\n    width: 100%;\n    height: min(30%, 10rem);\n}\n\n/* --------------------- Weather Container -------------------- */\n.weather-container {\n    width: 100%;\n    height: max(70%, 10rem);\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    flex-direction: column;\n}\n/* --------------------- Footer -------------------- */\nfooter {\n    grid-area: footer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--ct-darker);\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n}\n\nfooter > .github-contact-info {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: nowrap;\n    gap: 0.5rem;\n    text-decoration: none;\n}\n\nfooter > .github-contact-info > .footer-logo {\n    width: var(--logo-fs);\n    filter: var(--filter-numix);\n}\n\nfooter > .github-contact-info > .github-user {\n    font-size: var(--logo-fs);\n    color: var(--ct-light);\n}\n\nfooter > .github-contact-info > .github-user:hover {\n    color: var(--ct-numix);\n}\n/* --------------------- Section -------------------- */\n/* --------------------- Section -------------------- */\n\n/* Extra small devices (phones, 600px and down) */\n@media only screen and (max-width: 600px) {\n}\n/* Small devices (portrait tablets and large phones, 600px and up) */\n@media only screen and (min-width: 600px) {\n    :root {\n        --logo-fs: 1.4rem;\n        --navbar-fs: 1rem;\n        --header-fs: 1.9rem;\n        --subheader-fs: 1.5rem;\n        --subheader-sm-fs: 1.4rem;\n        --content-fs: 1rem;\n    }\n}\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {\n    :root {\n        --logo-fs: 1.5rem;\n        --navbar-fs: 1.1rem;\n        --header-fs: 2rem;\n        --subheader-fs: 1.6rem;\n        --subheader-sm-fs: 1.5rem;\n        --content-fs: 1rem;\n\n        /* Elements height */\n        --side-panel-length: min(14rem, 40%);\n        --content-h: calc(100vh - var(--navbar-h) - var(--footer-h));\n    }\n}\n/* Large devices (laptops/desktops, 992px and up) */\n@media only screen and (min-width: 992px) {\n}\n/* Extra large devices (large laptops and desktops, 1200px and up) */\n@media only screen and (min-width: 1200px) {\n}\n\n/* ------------------------ Animations --------------------*/\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n\n    to {\n        opacity: 1;\n    }\n}\n\n@keyframes slideDown {\n    0% {\n        transform: translate(0, -100%);\n    }\n    100% {\n        transform: translate(0, 0);\n    }\n}\n\n@keyframes slideRight {\n    0% {\n        transform: translate(-100%);\n    }\n    100% {\n        transform: translate(0);\n    }\n}\n\n@keyframes scaleX {\n    0% {\n        transform: scaleX(0);\n    }\n    100% {\n        transform: scaleX(100%);\n    }\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;IACI,gBAAgB;IAChB,oBAAoB;IACpB,kBAAkB;IAClB,kBAAkB;IAClB,mBAAmB;IACnB,kBAAkB;IAClB,mBAAmB;IACnB,mBAAmB;IACnB,mBAAmB;IACnB,wCAAwC;IACxC;sCACkC;IAClC;sCACkC;IAClC;qCACiC;IACjC;qCACiC;IACjC;sCACkC;IAClC;uCACmC;;IAEnC,oBAAoB;IACpB,kBAAkB;IAClB,0BAA0B;IAC1B;;KAEC;IACD,gBAAgB;;IAEhB,cAAc;IACd,iBAAiB;IACjB,iBAAiB;IACjB,mBAAmB;IACnB,sBAAsB;IACtB,yBAAyB;IACzB,oBAAoB;;IAEpB,iBAAiB;AACrB;;AAEA;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV;0DACsD;IACtD,uBAAuB;AAC3B;;AAEA;IACI,iCAAiC;IACjC,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,eAAe;IACf,SAAS;IACT,WAAW;IACX,aAAa;AACjB;;AAEA,8DAA8D;AAC9D;IACI,gBAAgB;IAChB,kBAAkB;IAClB,aAAa;IACb,WAAW;IACX,sBAAsB;IACtB,WAAW;IACX,uBAAuB;AAC3B;;AAEA,iEAAiE;AACjE;IACI,WAAW;IACX,uBAAuB;IACvB,kBAAkB;IAClB,aAAa;IACb,mBAAmB;IACnB,2BAA2B;IAC3B,sBAAsB;AAC1B;AACA,sDAAsD;AACtD;IACI,iBAAiB;IACjB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,kCAAkC;IAClC,eAAe;IACf,SAAS;IACT,WAAW;AACf;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,mBAAmB;IACnB,iBAAiB;IACjB,WAAW;IACX,qBAAqB;AACzB;;AAEA;IACI,qBAAqB;IACrB,2BAA2B;AAC/B;;AAEA;IACI,yBAAyB;IACzB,sBAAsB;AAC1B;;AAEA;IACI,sBAAsB;AAC1B;AACA,uDAAuD;AACvD,uDAAuD;;AAEvD,iDAAiD;AACjD;AACA;AACA,oEAAoE;AACpE;IACI;QACI,iBAAiB;QACjB,iBAAiB;QACjB,mBAAmB;QACnB,sBAAsB;QACtB,yBAAyB;QACzB,kBAAkB;IACtB;AACJ;AACA,qDAAqD;AACrD;IACI;QACI,iBAAiB;QACjB,mBAAmB;QACnB,iBAAiB;QACjB,sBAAsB;QACtB,yBAAyB;QACzB,kBAAkB;;QAElB,oBAAoB;QACpB,oCAAoC;QACpC,4DAA4D;IAChE;AACJ;AACA,mDAAmD;AACnD;AACA;AACA,oEAAoE;AACpE;AACA;;AAEA,4DAA4D;AAC5D;IACI;QACI,UAAU;IACd;;IAEA;QACI,UAAU;IACd;AACJ;;AAEA;IACI;QACI,8BAA8B;IAClC;IACA;QACI,0BAA0B;IAC9B;AACJ;;AAEA;IACI;QACI,2BAA2B;IAC/B;IACA;QACI,uBAAuB;IAC3B;AACJ;;AAEA;IACI;QACI,oBAAoB;IACxB;IACA;QACI,uBAAuB;IAC3B;AACJ",sourcesContent:[':root {\n    /* Color theme */\n    --ct-darker: #2d2d2d;\n    --ct-dark: #3d3d3d;\n    --ct-grey: #535353;\n    --ct-numix: #d64937;\n    --ct-blue: #379cd6;\n    --ct-green: #5cd637;\n    --ct-light: #dcdcdc;\n    --ct-white: #ffffff;\n    /* Color theme (filter) for SVG images */\n    --filter-darker: invert(11%) sepia(0%) saturate(0%) hue-rotate(217deg)\n        brightness(102%) contrast(84%);\n    --filter-dark: invert(15%) sepia(0%) saturate(1327%) hue-rotate(271deg)\n        brightness(101%) contrast(74%);\n    --filter-grey: invert(32%) sepia(0%) saturate(0%) hue-rotate(320deg)\n        brightness(95%) contrast(89%);\n    --filter-numix: invert(34%) sepia(22%) saturate(6773%) hue-rotate(345deg)\n        brightness(92%) contrast(80%);\n    --filter-light: invert(99%) sepia(0%) saturate(4028%) hue-rotate(193deg)\n        brightness(123%) contrast(73%);\n    --filter-white: invert(93%) sepia(100%) saturate(0%) hue-rotate(37deg)\n        brightness(105%) contrast(102%);\n\n    /* Elements height */\n    --navbar-h: 3.8rem;\n    --side-panel-length: 15rem;\n    --content-h: calc(\n        100vh - var(--navbar-h) - var(--footer-h) - var(--side-panel-length)\n    );\n    --footer-h: 3rem;\n\n    /* Font size */\n    --logo-fs: 1.3rem;\n    --navbar-fs: 1rem;\n    --header-fs: 1.8rem;\n    --subheader-fs: 1.4rem;\n    --subheader-sm-fs: 1.3rem;\n    --content-fs: 0.9rem;\n\n    --taskRow-h: 4rem;\n}\n\n* {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font-family: "Lucida Sans", "Lucida Sans Regular", "Lucida Grande",\n        "Lucida Sans Unicode", Geneva, Verdana, sans-serif;\n    color: var(--ct-darker);\n}\n\nbody {\n    background-color: var(--ct-light);\n    padding: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n    gap: 2rem;\n    width: 100%;\n    height: 100vh;\n}\n\n/* --------------------- Form Container -------------------- */\n.form-container {\n    margin-top: 2rem;\n    text-align: center;\n    display: flex;\n    gap: 0.5rem;\n    flex-direction: column;\n    width: 100%;\n    height: min(30%, 10rem);\n}\n\n/* --------------------- Weather Container -------------------- */\n.weather-container {\n    width: 100%;\n    height: max(70%, 10rem);\n    text-align: center;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    flex-direction: column;\n}\n/* --------------------- Footer -------------------- */\nfooter {\n    grid-area: footer;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: var(--ct-darker);\n    position: fixed;\n    bottom: 0;\n    width: 100%;\n}\n\nfooter > .github-contact-info {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: nowrap;\n    gap: 0.5rem;\n    text-decoration: none;\n}\n\nfooter > .github-contact-info > .footer-logo {\n    width: var(--logo-fs);\n    filter: var(--filter-numix);\n}\n\nfooter > .github-contact-info > .github-user {\n    font-size: var(--logo-fs);\n    color: var(--ct-light);\n}\n\nfooter > .github-contact-info > .github-user:hover {\n    color: var(--ct-numix);\n}\n/* --------------------- Section -------------------- */\n/* --------------------- Section -------------------- */\n\n/* Extra small devices (phones, 600px and down) */\n@media only screen and (max-width: 600px) {\n}\n/* Small devices (portrait tablets and large phones, 600px and up) */\n@media only screen and (min-width: 600px) {\n    :root {\n        --logo-fs: 1.4rem;\n        --navbar-fs: 1rem;\n        --header-fs: 1.9rem;\n        --subheader-fs: 1.5rem;\n        --subheader-sm-fs: 1.4rem;\n        --content-fs: 1rem;\n    }\n}\n/* Medium devices (landscape tablets, 768px and up) */\n@media only screen and (min-width: 768px) {\n    :root {\n        --logo-fs: 1.5rem;\n        --navbar-fs: 1.1rem;\n        --header-fs: 2rem;\n        --subheader-fs: 1.6rem;\n        --subheader-sm-fs: 1.5rem;\n        --content-fs: 1rem;\n\n        /* Elements height */\n        --side-panel-length: min(14rem, 40%);\n        --content-h: calc(100vh - var(--navbar-h) - var(--footer-h));\n    }\n}\n/* Large devices (laptops/desktops, 992px and up) */\n@media only screen and (min-width: 992px) {\n}\n/* Extra large devices (large laptops and desktops, 1200px and up) */\n@media only screen and (min-width: 1200px) {\n}\n\n/* ------------------------ Animations --------------------*/\n@keyframes fadeIn {\n    from {\n        opacity: 0;\n    }\n\n    to {\n        opacity: 1;\n    }\n}\n\n@keyframes slideDown {\n    0% {\n        transform: translate(0, -100%);\n    }\n    100% {\n        transform: translate(0, 0);\n    }\n}\n\n@keyframes slideRight {\n    0% {\n        transform: translate(-100%);\n    }\n    100% {\n        transform: translate(0);\n    }\n}\n\n@keyframes scaleX {\n    0% {\n        transform: scaleX(0);\n    }\n    100% {\n        transform: scaleX(100%);\n    }\n}\n'],sourceRoot:""}]);const s=i},314:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(i[A]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);r&&i[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),a&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=a):d[4]="".concat(a)),e.push(d))}},e}},354:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},72:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},i=[],s=0;s<n.length;s++){var A=n[s],c=r.base?A[0]+r.base:A[0],d=o[c]||0,l="".concat(c," ").concat(d);o[c]=d+1;var m=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==m)e[m].references++,e[m].updater(u);else{var p=a(u,r);r.byIndex=s,e.splice(s,0,{identifier:l,updater:p,references:1})}i.push(l)}return i}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var s=t(o[i]);e[s].references--}for(var A=r(n,a),c=0;c<o.length;c++){var d=t(o[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}o=A}}},659:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},540:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},56:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},825:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},113:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&(!n||!/^http(s?):/.test(n));)n=r[a--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.nc=void 0,(()=>{const n="243eecaa621a7c5bbe4b86f7bc268e9e",e=async e=>{e.preventDefault();const t=document.getElementById("input_city").value,r=document.getElementById("city_title"),a=document.getElementById("current_temp"),o=await(async e=>{const t=await(async e=>{const t=await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${e}&limit=5&appid=${n}`);try{return await t.json()}catch(n){throw new Error(t.status)}})(e);return{lon:t[0].lon,lat:t[0].lat}})(t),i=await(async(e,t)=>{const r=await(async(e,t)=>{const r=await fetch(`http://api.openweathermap.org/geo/1.0/reverse?lat=${t}&lon=${e}&limit=1&appid=${n}`);try{return await r.json()}catch(n){throw new Error(r.status)}})(e,t);return{name:r[0].name,state:r[0].state,country:r[0].country}})(o.lon,o.lat);r.textContent=`${i.name}, ${i.state}, ${i.country}`;const s=await(async(e,t,r="metric")=>await(async(e,t,r="metric")=>{const a=await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${t}&lon=${e}&appid=${n}&units=${r}`);try{return await a.json()}catch(n){throw new Error(a.status)}})(e,t,r))(o.lon,o.lat);a.textContent=`Current temperature: ${s.main.temp} C`,console.log(s)},r=t.p+"6d4f8d6e9335a6ad1b70.svg";var a=t(72),o=t.n(a),i=t(825),s=t.n(i),A=t(659),c=t.n(A),d=t(56),l=t.n(d),m=t(540),u=t.n(m),p=t(113),f=t.n(p),h=t(208),C={};C.styleTagTransform=f(),C.setAttributes=l(),C.insert=c().bind(null,"head"),C.domAPI=s(),C.insertStyleElement=u(),o()(h.A,C),h.A&&h.A.locals&&h.A.locals,function(){const n=document.body;n.appendChild((()=>{const n=document.createElement("div");n.classList.add("form-container");const t=document.createElement("h2");t.textContent="Look for a city",n.appendChild(t);const r=document.createElement("h4");r.textContent="{City name}, {State}, {Country code}",n.appendChild(r);const a=document.createElement("form"),o=document.createElement("label");o.setAttribute("for","input_city"),o.textContent="Location",a.appendChild(o);const i=document.createElement("input");i.type="text",i.id="input_city",i.name="input_city",i.placeholder="Melbourne, AU",a.appendChild(i);const s=document.createElement("input");return s.type="submit",s.value="Search",s.addEventListener("click",e),a.appendChild(s),n.appendChild(a),n})()),n.appendChild((()=>{const n=document.createElement("div");n.classList.add("weather-container");const e=document.createElement("h1");e.id="city_title",n.appendChild(e);const t=document.createElement("h3");return t.id="current_temp",n.appendChild(t),n})()),n.appendChild((()=>{const n=document.createElement("footer"),e=document.createElement("a");e.classList.add("github-contact-info"),e.href="https://github.com/nico9506/TOP-weather-app",e.target="_blank";const t=new Image;t.src=r,t.classList.add("footer-logo"),e.appendChild(t);const a=document.createElement("h1");return a.classList.add("github-user"),a.id="githubUser",a.textContent="nico9506",e.appendChild(a),n.appendChild(e),n})())}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVEaENDWSxJQUNqQmIsRUFBS3pGLFlDa0N5QixNQUs5QixNQUFNMEYsRUFBWW5HLFNBQVNXLGNBQWMsT0FDekN3RixFQUFVQyxVQUFVQyxJQUFJLHFCQUV4QixNQUFNL0IsRUFBT3RFLFNBQVNXLGNBQWMsTUFDcEMyRCxFQUFLekksR0FBSyxhQUNWc0ssRUFBVTFGLFlBQVk2RCxHQUV0QixNQUFNMEMsRUFBcUJoSCxTQUFTVyxjQUFjLE1BSWxELE9BSEFxRyxFQUFtQm5MLEdBQUssZUFDeEJzSyxFQUFVMUYsWUFBWXVHLEdBRWZiLENBQVMsRURsRENjLElBQ2pCZixFQUFLekYsWUNvRG1CLE1BSXhCLE1BR015RyxFQUFTbEgsU0FBU1csY0FBYyxVQUdoQ3dHLEVBQWFuSCxTQUFTVyxjQUFjLEtBQzFDd0csRUFBV2YsVUFBVUMsSUFBSSx1QkFDekJjLEVBQVdDLEtBUGEsOENBUXhCRCxFQUFXckgsT0FBUyxTQUVwQixNQUFNdUgsRUFBTyxJQUFJQyxNQUNqQkQsRUFBSzlELElBQU0sRUFDWDhELEVBQUtqQixVQUFVQyxJQUFJLGVBQ25CYyxFQUFXMUcsWUFBWTRHLEdBRXZCLE1BQU1FLEVBQWF2SCxTQUFTVyxjQUFjLE1BUTFDLE9BUEE0RyxFQUFXbkIsVUFBVUMsSUFBSSxlQUN6QmtCLEVBQVcxTCxHQUFLLGFBQ2hCMEwsRUFBVzlCLFlBbkJTLFdBb0JwQjBCLEVBQVcxRyxZQUFZOEcsR0FFdkJMLEVBQU96RyxZQUFZMEcsR0FFWkQsQ0FBTSxFRGhGSU0sR0FDcEIsQ0FWRCxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGVtcGxhdGUtd2VicGFjay8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdGVtcGxhdGUtd2VicGFjay8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vdGVtcGxhdGUtd2VicGFjay8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzIiwid2VicGFjazovL3RlbXBsYXRlLXdlYnBhY2svLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdGVtcGxhdGUtd2VicGFjay8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanMiLCJ3ZWJwYWNrOi8vdGVtcGxhdGUtd2VicGFjay8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qcyIsIndlYnBhY2s6Ly90ZW1wbGF0ZS13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL3RlbXBsYXRlLXdlYnBhY2svLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qcyIsIndlYnBhY2s6Ly90ZW1wbGF0ZS13ZWJwYWNrLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanMiLCJ3ZWJwYWNrOi8vdGVtcGxhdGUtd2VicGFjay93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly90ZW1wbGF0ZS13ZWJwYWNrL3dlYnBhY2svcnVudGltZS9jb21wYXQgZ2V0IGRlZmF1bHQgZXhwb3J0Iiwid2VicGFjazovL3RlbXBsYXRlLXdlYnBhY2svd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RlbXBsYXRlLXdlYnBhY2svd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly90ZW1wbGF0ZS13ZWJwYWNrL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdGVtcGxhdGUtd2VicGFjay93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly90ZW1wbGF0ZS13ZWJwYWNrL3dlYnBhY2svcnVudGltZS9ub25jZSIsIndlYnBhY2s6Ly90ZW1wbGF0ZS13ZWJwYWNrLy4vc3JjL0FQSVV0aWxpdGllcy5qcyIsIndlYnBhY2s6Ly90ZW1wbGF0ZS13ZWJwYWNrLy4vc3JjL21vZGVsLmpzIiwid2VicGFjazovL3RlbXBsYXRlLXdlYnBhY2svLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vdGVtcGxhdGUtd2VicGFjay8uL3NyYy9pbmRleC5qcyIsIndlYnBhY2s6Ly90ZW1wbGF0ZS13ZWJwYWNrLy4vc3JjL2hvbWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgYDpyb290IHtcbiAgICAvKiBDb2xvciB0aGVtZSAqL1xuICAgIC0tY3QtZGFya2VyOiAjMmQyZDJkO1xuICAgIC0tY3QtZGFyazogIzNkM2QzZDtcbiAgICAtLWN0LWdyZXk6ICM1MzUzNTM7XG4gICAgLS1jdC1udW1peDogI2Q2NDkzNztcbiAgICAtLWN0LWJsdWU6ICMzNzljZDY7XG4gICAgLS1jdC1ncmVlbjogIzVjZDYzNztcbiAgICAtLWN0LWxpZ2h0OiAjZGNkY2RjO1xuICAgIC0tY3Qtd2hpdGU6ICNmZmZmZmY7XG4gICAgLyogQ29sb3IgdGhlbWUgKGZpbHRlcikgZm9yIFNWRyBpbWFnZXMgKi9cbiAgICAtLWZpbHRlci1kYXJrZXI6IGludmVydCgxMSUpIHNlcGlhKDAlKSBzYXR1cmF0ZSgwJSkgaHVlLXJvdGF0ZSgyMTdkZWcpXG4gICAgICAgIGJyaWdodG5lc3MoMTAyJSkgY29udHJhc3QoODQlKTtcbiAgICAtLWZpbHRlci1kYXJrOiBpbnZlcnQoMTUlKSBzZXBpYSgwJSkgc2F0dXJhdGUoMTMyNyUpIGh1ZS1yb3RhdGUoMjcxZGVnKVxuICAgICAgICBicmlnaHRuZXNzKDEwMSUpIGNvbnRyYXN0KDc0JSk7XG4gICAgLS1maWx0ZXItZ3JleTogaW52ZXJ0KDMyJSkgc2VwaWEoMCUpIHNhdHVyYXRlKDAlKSBodWUtcm90YXRlKDMyMGRlZylcbiAgICAgICAgYnJpZ2h0bmVzcyg5NSUpIGNvbnRyYXN0KDg5JSk7XG4gICAgLS1maWx0ZXItbnVtaXg6IGludmVydCgzNCUpIHNlcGlhKDIyJSkgc2F0dXJhdGUoNjc3MyUpIGh1ZS1yb3RhdGUoMzQ1ZGVnKVxuICAgICAgICBicmlnaHRuZXNzKDkyJSkgY29udHJhc3QoODAlKTtcbiAgICAtLWZpbHRlci1saWdodDogaW52ZXJ0KDk5JSkgc2VwaWEoMCUpIHNhdHVyYXRlKDQwMjglKSBodWUtcm90YXRlKDE5M2RlZylcbiAgICAgICAgYnJpZ2h0bmVzcygxMjMlKSBjb250cmFzdCg3MyUpO1xuICAgIC0tZmlsdGVyLXdoaXRlOiBpbnZlcnQoOTMlKSBzZXBpYSgxMDAlKSBzYXR1cmF0ZSgwJSkgaHVlLXJvdGF0ZSgzN2RlZylcbiAgICAgICAgYnJpZ2h0bmVzcygxMDUlKSBjb250cmFzdCgxMDIlKTtcblxuICAgIC8qIEVsZW1lbnRzIGhlaWdodCAqL1xuICAgIC0tbmF2YmFyLWg6IDMuOHJlbTtcbiAgICAtLXNpZGUtcGFuZWwtbGVuZ3RoOiAxNXJlbTtcbiAgICAtLWNvbnRlbnQtaDogY2FsYyhcbiAgICAgICAgMTAwdmggLSB2YXIoLS1uYXZiYXItaCkgLSB2YXIoLS1mb290ZXItaCkgLSB2YXIoLS1zaWRlLXBhbmVsLWxlbmd0aClcbiAgICApO1xuICAgIC0tZm9vdGVyLWg6IDNyZW07XG5cbiAgICAvKiBGb250IHNpemUgKi9cbiAgICAtLWxvZ28tZnM6IDEuM3JlbTtcbiAgICAtLW5hdmJhci1mczogMXJlbTtcbiAgICAtLWhlYWRlci1mczogMS44cmVtO1xuICAgIC0tc3ViaGVhZGVyLWZzOiAxLjRyZW07XG4gICAgLS1zdWJoZWFkZXItc20tZnM6IDEuM3JlbTtcbiAgICAtLWNvbnRlbnQtZnM6IDAuOXJlbTtcblxuICAgIC0tdGFza1Jvdy1oOiA0cmVtO1xufVxuXG4qIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGZvbnQtZmFtaWx5OiBcIkx1Y2lkYSBTYW5zXCIsIFwiTHVjaWRhIFNhbnMgUmVndWxhclwiLCBcIkx1Y2lkYSBHcmFuZGVcIixcbiAgICAgICAgXCJMdWNpZGEgU2FucyBVbmljb2RlXCIsIEdlbmV2YSwgVmVyZGFuYSwgc2Fucy1zZXJpZjtcbiAgICBjb2xvcjogdmFyKC0tY3QtZGFya2VyKTtcbn1cblxuYm9keSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY3QtbGlnaHQpO1xuICAgIHBhZGRpbmc6IDJyZW07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBnYXA6IDJyZW07XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tIEZvcm0gQ29udGFpbmVyIC0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4uZm9ybS1jb250YWluZXIge1xuICAgIG1hcmdpbi10b3A6IDJyZW07XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZ2FwOiAwLjVyZW07XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IG1pbigzMCUsIDEwcmVtKTtcbn1cblxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFdlYXRoZXIgQ29udGFpbmVyIC0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG4ud2VhdGhlci1jb250YWluZXIge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogbWF4KDcwJSwgMTByZW0pO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0gRm9vdGVyIC0tLS0tLS0tLS0tLS0tLS0tLS0tICovXG5mb290ZXIge1xuICAgIGdyaWQtYXJlYTogZm9vdGVyO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1kYXJrZXIpO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICBib3R0b206IDA7XG4gICAgd2lkdGg6IDEwMCU7XG59XG5cbmZvb3RlciA+IC5naXRodWItY29udGFjdC1pbmZvIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZmxleC13cmFwOiBub3dyYXA7XG4gICAgZ2FwOiAwLjVyZW07XG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5mb290ZXIgPiAuZ2l0aHViLWNvbnRhY3QtaW5mbyA+IC5mb290ZXItbG9nbyB7XG4gICAgd2lkdGg6IHZhcigtLWxvZ28tZnMpO1xuICAgIGZpbHRlcjogdmFyKC0tZmlsdGVyLW51bWl4KTtcbn1cblxuZm9vdGVyID4gLmdpdGh1Yi1jb250YWN0LWluZm8gPiAuZ2l0aHViLXVzZXIge1xuICAgIGZvbnQtc2l6ZTogdmFyKC0tbG9nby1mcyk7XG4gICAgY29sb3I6IHZhcigtLWN0LWxpZ2h0KTtcbn1cblxuZm9vdGVyID4gLmdpdGh1Yi1jb250YWN0LWluZm8gPiAuZ2l0aHViLXVzZXI6aG92ZXIge1xuICAgIGNvbG9yOiB2YXIoLS1jdC1udW1peCk7XG59XG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0gU2VjdGlvbiAtLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFNlY3Rpb24gLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuLyogRXh0cmEgc21hbGwgZGV2aWNlcyAocGhvbmVzLCA2MDBweCBhbmQgZG93bikgKi9cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcbn1cbi8qIFNtYWxsIGRldmljZXMgKHBvcnRyYWl0IHRhYmxldHMgYW5kIGxhcmdlIHBob25lcywgNjAwcHggYW5kIHVwKSAqL1xuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MDBweCkge1xuICAgIDpyb290IHtcbiAgICAgICAgLS1sb2dvLWZzOiAxLjRyZW07XG4gICAgICAgIC0tbmF2YmFyLWZzOiAxcmVtO1xuICAgICAgICAtLWhlYWRlci1mczogMS45cmVtO1xuICAgICAgICAtLXN1YmhlYWRlci1mczogMS41cmVtO1xuICAgICAgICAtLXN1YmhlYWRlci1zbS1mczogMS40cmVtO1xuICAgICAgICAtLWNvbnRlbnQtZnM6IDFyZW07XG4gICAgfVxufVxuLyogTWVkaXVtIGRldmljZXMgKGxhbmRzY2FwZSB0YWJsZXRzLCA3NjhweCBhbmQgdXApICovXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XG4gICAgOnJvb3Qge1xuICAgICAgICAtLWxvZ28tZnM6IDEuNXJlbTtcbiAgICAgICAgLS1uYXZiYXItZnM6IDEuMXJlbTtcbiAgICAgICAgLS1oZWFkZXItZnM6IDJyZW07XG4gICAgICAgIC0tc3ViaGVhZGVyLWZzOiAxLjZyZW07XG4gICAgICAgIC0tc3ViaGVhZGVyLXNtLWZzOiAxLjVyZW07XG4gICAgICAgIC0tY29udGVudC1mczogMXJlbTtcblxuICAgICAgICAvKiBFbGVtZW50cyBoZWlnaHQgKi9cbiAgICAgICAgLS1zaWRlLXBhbmVsLWxlbmd0aDogbWluKDE0cmVtLCA0MCUpO1xuICAgICAgICAtLWNvbnRlbnQtaDogY2FsYygxMDB2aCAtIHZhcigtLW5hdmJhci1oKSAtIHZhcigtLWZvb3Rlci1oKSk7XG4gICAgfVxufVxuLyogTGFyZ2UgZGV2aWNlcyAobGFwdG9wcy9kZXNrdG9wcywgOTkycHggYW5kIHVwKSAqL1xuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA5OTJweCkge1xufVxuLyogRXh0cmEgbGFyZ2UgZGV2aWNlcyAobGFyZ2UgbGFwdG9wcyBhbmQgZGVza3RvcHMsIDEyMDBweCBhbmQgdXApICovXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEyMDBweCkge1xufVxuXG4vKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gQW5pbWF0aW9ucyAtLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XG4gICAgZnJvbSB7XG4gICAgICAgIG9wYWNpdHk6IDA7XG4gICAgfVxuXG4gICAgdG8ge1xuICAgICAgICBvcGFjaXR5OiAxO1xuICAgIH1cbn1cblxuQGtleWZyYW1lcyBzbGlkZURvd24ge1xuICAgIDAlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgLTEwMCUpO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCk7XG4gICAgfVxufVxuXG5Aa2V5ZnJhbWVzIHNsaWRlUmlnaHQge1xuICAgIDAlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTEwMCUpO1xuICAgIH1cbiAgICAxMDAlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCk7XG4gICAgfVxufVxuXG5Aa2V5ZnJhbWVzIHNjYWxlWCB7XG4gICAgMCUge1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgwKTtcbiAgICB9XG4gICAgMTAwJSB7XG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDEwMCUpO1xuICAgIH1cbn1cbmAsIFwiXCIse1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wid2VicGFjazovLy4vc3JjL3N0eWxlLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtJQUNJLGdCQUFnQjtJQUNoQixvQkFBb0I7SUFDcEIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsbUJBQW1CO0lBQ25CLHdDQUF3QztJQUN4QztzQ0FDa0M7SUFDbEM7c0NBQ2tDO0lBQ2xDO3FDQUNpQztJQUNqQztxQ0FDaUM7SUFDakM7c0NBQ2tDO0lBQ2xDO3VDQUNtQzs7SUFFbkMsb0JBQW9CO0lBQ3BCLGtCQUFrQjtJQUNsQiwwQkFBMEI7SUFDMUI7O0tBRUM7SUFDRCxnQkFBZ0I7O0lBRWhCLGNBQWM7SUFDZCxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLG1CQUFtQjtJQUNuQixzQkFBc0I7SUFDdEIseUJBQXlCO0lBQ3pCLG9CQUFvQjs7SUFFcEIsaUJBQWlCO0FBQ3JCOztBQUVBO0lBQ0ksc0JBQXNCO0lBQ3RCLFNBQVM7SUFDVCxVQUFVO0lBQ1Y7MERBQ3NEO0lBQ3RELHVCQUF1QjtBQUMzQjs7QUFFQTtJQUNJLGlDQUFpQztJQUNqQyxhQUFhO0lBQ2IsYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsZUFBZTtJQUNmLFNBQVM7SUFDVCxXQUFXO0lBQ1gsYUFBYTtBQUNqQjs7QUFFQSw4REFBOEQ7QUFDOUQ7SUFDSSxnQkFBZ0I7SUFDaEIsa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixXQUFXO0lBQ1gsc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCx1QkFBdUI7QUFDM0I7O0FBRUEsaUVBQWlFO0FBQ2pFO0lBQ0ksV0FBVztJQUNYLHVCQUF1QjtJQUN2QixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQiwyQkFBMkI7SUFDM0Isc0JBQXNCO0FBQzFCO0FBQ0Esc0RBQXNEO0FBQ3REO0lBQ0ksaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGtDQUFrQztJQUNsQyxlQUFlO0lBQ2YsU0FBUztJQUNULFdBQVc7QUFDZjs7QUFFQTtJQUNJLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixXQUFXO0lBQ1gscUJBQXFCO0FBQ3pCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLDJCQUEyQjtBQUMvQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxzQkFBc0I7QUFDMUI7QUFDQSx1REFBdUQ7QUFDdkQsdURBQXVEOztBQUV2RCxpREFBaUQ7QUFDakQ7QUFDQTtBQUNBLG9FQUFvRTtBQUNwRTtJQUNJO1FBQ0ksaUJBQWlCO1FBQ2pCLGlCQUFpQjtRQUNqQixtQkFBbUI7UUFDbkIsc0JBQXNCO1FBQ3RCLHlCQUF5QjtRQUN6QixrQkFBa0I7SUFDdEI7QUFDSjtBQUNBLHFEQUFxRDtBQUNyRDtJQUNJO1FBQ0ksaUJBQWlCO1FBQ2pCLG1CQUFtQjtRQUNuQixpQkFBaUI7UUFDakIsc0JBQXNCO1FBQ3RCLHlCQUF5QjtRQUN6QixrQkFBa0I7O1FBRWxCLG9CQUFvQjtRQUNwQixvQ0FBb0M7UUFDcEMsNERBQTREO0lBQ2hFO0FBQ0o7QUFDQSxtREFBbUQ7QUFDbkQ7QUFDQTtBQUNBLG9FQUFvRTtBQUNwRTtBQUNBOztBQUVBLDREQUE0RDtBQUM1RDtJQUNJO1FBQ0ksVUFBVTtJQUNkOztJQUVBO1FBQ0ksVUFBVTtJQUNkO0FBQ0o7O0FBRUE7SUFDSTtRQUNJLDhCQUE4QjtJQUNsQztJQUNBO1FBQ0ksMEJBQTBCO0lBQzlCO0FBQ0o7O0FBRUE7SUFDSTtRQUNJLDJCQUEyQjtJQUMvQjtJQUNBO1FBQ0ksdUJBQXVCO0lBQzNCO0FBQ0o7O0FBRUE7SUFDSTtRQUNJLG9CQUFvQjtJQUN4QjtJQUNBO1FBQ0ksdUJBQXVCO0lBQzNCO0FBQ0pcIixcInNvdXJjZXNDb250ZW50XCI6W1wiOnJvb3Qge1xcbiAgICAvKiBDb2xvciB0aGVtZSAqL1xcbiAgICAtLWN0LWRhcmtlcjogIzJkMmQyZDtcXG4gICAgLS1jdC1kYXJrOiAjM2QzZDNkO1xcbiAgICAtLWN0LWdyZXk6ICM1MzUzNTM7XFxuICAgIC0tY3QtbnVtaXg6ICNkNjQ5Mzc7XFxuICAgIC0tY3QtYmx1ZTogIzM3OWNkNjtcXG4gICAgLS1jdC1ncmVlbjogIzVjZDYzNztcXG4gICAgLS1jdC1saWdodDogI2RjZGNkYztcXG4gICAgLS1jdC13aGl0ZTogI2ZmZmZmZjtcXG4gICAgLyogQ29sb3IgdGhlbWUgKGZpbHRlcikgZm9yIFNWRyBpbWFnZXMgKi9cXG4gICAgLS1maWx0ZXItZGFya2VyOiBpbnZlcnQoMTElKSBzZXBpYSgwJSkgc2F0dXJhdGUoMCUpIGh1ZS1yb3RhdGUoMjE3ZGVnKVxcbiAgICAgICAgYnJpZ2h0bmVzcygxMDIlKSBjb250cmFzdCg4NCUpO1xcbiAgICAtLWZpbHRlci1kYXJrOiBpbnZlcnQoMTUlKSBzZXBpYSgwJSkgc2F0dXJhdGUoMTMyNyUpIGh1ZS1yb3RhdGUoMjcxZGVnKVxcbiAgICAgICAgYnJpZ2h0bmVzcygxMDElKSBjb250cmFzdCg3NCUpO1xcbiAgICAtLWZpbHRlci1ncmV5OiBpbnZlcnQoMzIlKSBzZXBpYSgwJSkgc2F0dXJhdGUoMCUpIGh1ZS1yb3RhdGUoMzIwZGVnKVxcbiAgICAgICAgYnJpZ2h0bmVzcyg5NSUpIGNvbnRyYXN0KDg5JSk7XFxuICAgIC0tZmlsdGVyLW51bWl4OiBpbnZlcnQoMzQlKSBzZXBpYSgyMiUpIHNhdHVyYXRlKDY3NzMlKSBodWUtcm90YXRlKDM0NWRlZylcXG4gICAgICAgIGJyaWdodG5lc3MoOTIlKSBjb250cmFzdCg4MCUpO1xcbiAgICAtLWZpbHRlci1saWdodDogaW52ZXJ0KDk5JSkgc2VwaWEoMCUpIHNhdHVyYXRlKDQwMjglKSBodWUtcm90YXRlKDE5M2RlZylcXG4gICAgICAgIGJyaWdodG5lc3MoMTIzJSkgY29udHJhc3QoNzMlKTtcXG4gICAgLS1maWx0ZXItd2hpdGU6IGludmVydCg5MyUpIHNlcGlhKDEwMCUpIHNhdHVyYXRlKDAlKSBodWUtcm90YXRlKDM3ZGVnKVxcbiAgICAgICAgYnJpZ2h0bmVzcygxMDUlKSBjb250cmFzdCgxMDIlKTtcXG5cXG4gICAgLyogRWxlbWVudHMgaGVpZ2h0ICovXFxuICAgIC0tbmF2YmFyLWg6IDMuOHJlbTtcXG4gICAgLS1zaWRlLXBhbmVsLWxlbmd0aDogMTVyZW07XFxuICAgIC0tY29udGVudC1oOiBjYWxjKFxcbiAgICAgICAgMTAwdmggLSB2YXIoLS1uYXZiYXItaCkgLSB2YXIoLS1mb290ZXItaCkgLSB2YXIoLS1zaWRlLXBhbmVsLWxlbmd0aClcXG4gICAgKTtcXG4gICAgLS1mb290ZXItaDogM3JlbTtcXG5cXG4gICAgLyogRm9udCBzaXplICovXFxuICAgIC0tbG9nby1mczogMS4zcmVtO1xcbiAgICAtLW5hdmJhci1mczogMXJlbTtcXG4gICAgLS1oZWFkZXItZnM6IDEuOHJlbTtcXG4gICAgLS1zdWJoZWFkZXItZnM6IDEuNHJlbTtcXG4gICAgLS1zdWJoZWFkZXItc20tZnM6IDEuM3JlbTtcXG4gICAgLS1jb250ZW50LWZzOiAwLjlyZW07XFxuXFxuICAgIC0tdGFza1Jvdy1oOiA0cmVtO1xcbn1cXG5cXG4qIHtcXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBmb250LWZhbWlseTogXFxcIkx1Y2lkYSBTYW5zXFxcIiwgXFxcIkx1Y2lkYSBTYW5zIFJlZ3VsYXJcXFwiLCBcXFwiTHVjaWRhIEdyYW5kZVxcXCIsXFxuICAgICAgICBcXFwiTHVjaWRhIFNhbnMgVW5pY29kZVxcXCIsIEdlbmV2YSwgVmVyZGFuYSwgc2Fucy1zZXJpZjtcXG4gICAgY29sb3I6IHZhcigtLWN0LWRhcmtlcik7XFxufVxcblxcbmJvZHkge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1jdC1saWdodCk7XFxuICAgIHBhZGRpbmc6IDJyZW07XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBmbGV4LXdyYXA6IHdyYXA7XFxuICAgIGdhcDogMnJlbTtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogMTAwdmg7XFxufVxcblxcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLSBGb3JtIENvbnRhaW5lciAtLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xcbi5mb3JtLWNvbnRhaW5lciB7XFxuICAgIG1hcmdpbi10b3A6IDJyZW07XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZ2FwOiAwLjVyZW07XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBoZWlnaHQ6IG1pbigzMCUsIDEwcmVtKTtcXG59XFxuXFxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFdlYXRoZXIgQ29udGFpbmVyIC0tLS0tLS0tLS0tLS0tLS0tLS0tICovXFxuLndlYXRoZXItY29udGFpbmVyIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIGhlaWdodDogbWF4KDcwJSwgMTByZW0pO1xcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGp1c3RpZnktY29udGVudDogZmxleC1zdGFydDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG59XFxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tIEZvb3RlciAtLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xcbmZvb3RlciB7XFxuICAgIGdyaWQtYXJlYTogZm9vdGVyO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tY3QtZGFya2VyKTtcXG4gICAgcG9zaXRpb246IGZpeGVkO1xcbiAgICBib3R0b206IDA7XFxuICAgIHdpZHRoOiAxMDAlO1xcbn1cXG5cXG5mb290ZXIgPiAuZ2l0aHViLWNvbnRhY3QtaW5mbyB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBmbGV4LXdyYXA6IG5vd3JhcDtcXG4gICAgZ2FwOiAwLjVyZW07XFxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG59XFxuXFxuZm9vdGVyID4gLmdpdGh1Yi1jb250YWN0LWluZm8gPiAuZm9vdGVyLWxvZ28ge1xcbiAgICB3aWR0aDogdmFyKC0tbG9nby1mcyk7XFxuICAgIGZpbHRlcjogdmFyKC0tZmlsdGVyLW51bWl4KTtcXG59XFxuXFxuZm9vdGVyID4gLmdpdGh1Yi1jb250YWN0LWluZm8gPiAuZ2l0aHViLXVzZXIge1xcbiAgICBmb250LXNpemU6IHZhcigtLWxvZ28tZnMpO1xcbiAgICBjb2xvcjogdmFyKC0tY3QtbGlnaHQpO1xcbn1cXG5cXG5mb290ZXIgPiAuZ2l0aHViLWNvbnRhY3QtaW5mbyA+IC5naXRodWItdXNlcjpob3ZlciB7XFxuICAgIGNvbG9yOiB2YXIoLS1jdC1udW1peCk7XFxufVxcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLSBTZWN0aW9uIC0tLS0tLS0tLS0tLS0tLS0tLS0tICovXFxuLyogLS0tLS0tLS0tLS0tLS0tLS0tLS0tIFNlY3Rpb24gLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cXG5cXG4vKiBFeHRyYSBzbWFsbCBkZXZpY2VzIChwaG9uZXMsIDYwMHB4IGFuZCBkb3duKSAqL1xcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcXG59XFxuLyogU21hbGwgZGV2aWNlcyAocG9ydHJhaXQgdGFibGV0cyBhbmQgbGFyZ2UgcGhvbmVzLCA2MDBweCBhbmQgdXApICovXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiA2MDBweCkge1xcbiAgICA6cm9vdCB7XFxuICAgICAgICAtLWxvZ28tZnM6IDEuNHJlbTtcXG4gICAgICAgIC0tbmF2YmFyLWZzOiAxcmVtO1xcbiAgICAgICAgLS1oZWFkZXItZnM6IDEuOXJlbTtcXG4gICAgICAgIC0tc3ViaGVhZGVyLWZzOiAxLjVyZW07XFxuICAgICAgICAtLXN1YmhlYWRlci1zbS1mczogMS40cmVtO1xcbiAgICAgICAgLS1jb250ZW50LWZzOiAxcmVtO1xcbiAgICB9XFxufVxcbi8qIE1lZGl1bSBkZXZpY2VzIChsYW5kc2NhcGUgdGFibGV0cywgNzY4cHggYW5kIHVwKSAqL1xcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogNzY4cHgpIHtcXG4gICAgOnJvb3Qge1xcbiAgICAgICAgLS1sb2dvLWZzOiAxLjVyZW07XFxuICAgICAgICAtLW5hdmJhci1mczogMS4xcmVtO1xcbiAgICAgICAgLS1oZWFkZXItZnM6IDJyZW07XFxuICAgICAgICAtLXN1YmhlYWRlci1mczogMS42cmVtO1xcbiAgICAgICAgLS1zdWJoZWFkZXItc20tZnM6IDEuNXJlbTtcXG4gICAgICAgIC0tY29udGVudC1mczogMXJlbTtcXG5cXG4gICAgICAgIC8qIEVsZW1lbnRzIGhlaWdodCAqL1xcbiAgICAgICAgLS1zaWRlLXBhbmVsLWxlbmd0aDogbWluKDE0cmVtLCA0MCUpO1xcbiAgICAgICAgLS1jb250ZW50LWg6IGNhbGMoMTAwdmggLSB2YXIoLS1uYXZiYXItaCkgLSB2YXIoLS1mb290ZXItaCkpO1xcbiAgICB9XFxufVxcbi8qIExhcmdlIGRldmljZXMgKGxhcHRvcHMvZGVza3RvcHMsIDk5MnB4IGFuZCB1cCkgKi9cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDk5MnB4KSB7XFxufVxcbi8qIEV4dHJhIGxhcmdlIGRldmljZXMgKGxhcmdlIGxhcHRvcHMgYW5kIGRlc2t0b3BzLCAxMjAwcHggYW5kIHVwKSAqL1xcbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTIwMHB4KSB7XFxufVxcblxcbi8qIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBBbmltYXRpb25zIC0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cXG5Aa2V5ZnJhbWVzIGZhZGVJbiB7XFxuICAgIGZyb20ge1xcbiAgICAgICAgb3BhY2l0eTogMDtcXG4gICAgfVxcblxcbiAgICB0byB7XFxuICAgICAgICBvcGFjaXR5OiAxO1xcbiAgICB9XFxufVxcblxcbkBrZXlmcmFtZXMgc2xpZGVEb3duIHtcXG4gICAgMCUge1xcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgLTEwMCUpO1xcbiAgICB9XFxuICAgIDEwMCUge1xcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCwgMCk7XFxuICAgIH1cXG59XFxuXFxuQGtleWZyYW1lcyBzbGlkZVJpZ2h0IHtcXG4gICAgMCUge1xcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTEwMCUpO1xcbiAgICB9XFxuICAgIDEwMCUge1xcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMCk7XFxuICAgIH1cXG59XFxuXFxuQGtleWZyYW1lcyBzY2FsZVgge1xcbiAgICAwJSB7XFxuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlWCgwKTtcXG4gICAgfVxcbiAgICAxMDAlIHtcXG4gICAgICAgIHRyYW5zZm9ybTogc2NhbGVYKDEwMCUpO1xcbiAgICB9XFxufVxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLy8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbl9fd2VicGFja19yZXF1aXJlX18ubiA9IChtb2R1bGUpID0+IHtcblx0dmFyIGdldHRlciA9IG1vZHVsZSAmJiBtb2R1bGUuX19lc01vZHVsZSA/XG5cdFx0KCkgPT4gKG1vZHVsZVsnZGVmYXVsdCddKSA6XG5cdFx0KCkgPT4gKG1vZHVsZSk7XG5cdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsIHsgYTogZ2V0dGVyIH0pO1xuXHRyZXR1cm4gZ2V0dGVyO1xufTsiLCIvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9ucyBmb3IgaGFybW9ueSBleHBvcnRzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSAoZXhwb3J0cywgZGVmaW5pdGlvbikgPT4ge1xuXHRmb3IodmFyIGtleSBpbiBkZWZpbml0aW9uKSB7XG5cdFx0aWYoX193ZWJwYWNrX3JlcXVpcmVfXy5vKGRlZmluaXRpb24sIGtleSkgJiYgIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBrZXkpKSB7XG5cdFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywga2V5LCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZGVmaW5pdGlvbltrZXldIH0pO1xuXHRcdH1cblx0fVxufTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLmcgPSAoZnVuY3Rpb24oKSB7XG5cdGlmICh0eXBlb2YgZ2xvYmFsVGhpcyA9PT0gJ29iamVjdCcpIHJldHVybiBnbG9iYWxUaGlzO1xuXHR0cnkge1xuXHRcdHJldHVybiB0aGlzIHx8IG5ldyBGdW5jdGlvbigncmV0dXJuIHRoaXMnKSgpO1xuXHR9IGNhdGNoIChlKSB7XG5cdFx0aWYgKHR5cGVvZiB3aW5kb3cgPT09ICdvYmplY3QnKSByZXR1cm4gd2luZG93O1xuXHR9XG59KSgpOyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJ2YXIgc2NyaXB0VXJsO1xuaWYgKF9fd2VicGFja19yZXF1aXJlX18uZy5pbXBvcnRTY3JpcHRzKSBzY3JpcHRVcmwgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcubG9jYXRpb24gKyBcIlwiO1xudmFyIGRvY3VtZW50ID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmRvY3VtZW50O1xuaWYgKCFzY3JpcHRVcmwgJiYgZG9jdW1lbnQpIHtcblx0aWYgKGRvY3VtZW50LmN1cnJlbnRTY3JpcHQpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkge1xuXHRcdFx0dmFyIGkgPSBzY3JpcHRzLmxlbmd0aCAtIDE7XG5cdFx0XHR3aGlsZSAoaSA+IC0xICYmICghc2NyaXB0VXJsIHx8ICEvXmh0dHAocz8pOi8udGVzdChzY3JpcHRVcmwpKSkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiY29uc3QgQVBJX0tFWSA9IFwiMjQzZWVjYWE2MjFhN2M1YmJlNGI4NmY3YmMyNjhlOWVcIjtcblxuY29uc3Qgc2VhcmNoTG9jYXRpb25EYXRhID0gYXN5bmMgKGxvY2F0aW9uKSA9PiB7XG4gICAgLyoqXG4gICAgICogQVBJIEtleSBmcm9tIG5pY285NTA2IHVzZXIsIE9wZW53ZWF0aGVybWFwXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge2xvY2F0aW9ufSAnbG9jYXRpb24nIC0tPiB7Y2l0eSBuYW1lfSx7c3RhdGUgY29kZX0se2NvdW50cnkgY29kZX1cbiAgICAgKlxuICAgICAqIERvY3VtZW50YXRpb246IGh0dHBzOi8vb3BlbndlYXRoZXJtYXAub3JnL2N1cnJlbnQjb25lXG4gICAgICpcbiAgICAgKiBxIFx0KHJlcXVpcmVkKSBcdENpdHkgbmFtZSwgc3RhdGUgY29kZSAob25seSBmb3IgdGhlIFVTKSBhbmQgY291bnRyeSBjb2RlIGRpdmlkZWQgYnkgY29tbWEuIFBsZWFzZSB1c2UgSVNPIDMxNjYgY291bnRyeSBjb2Rlcy5cbiAgICAgKlxuICAgICAqIGFwcGlkIFx0KHJlcXVpcmVkKSBcdFlvdXIgdW5pcXVlIEFQSSBrZXkgKHlvdSBjYW4gYWx3YXlzIGZpbmQgaXQgb24geW91ciBhY2NvdW50IHBhZ2UgdW5kZXIgdGhlIFwiQVBJIGtleVwiIHRhYilcbiAgICAgKiBsaW1pdCBcdChvcHRpb25hbCkgXHROdW1iZXIgb2YgdGhlIGxvY2F0aW9ucyBpbiB0aGUgQVBJIHJlc3BvbnNlICh1cCB0byA1IHJlc3VsdHMgY2FuIGJlIHJldHVybmVkIGluIHRoZSBBUEkgcmVzcG9uc2UpXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gb2JqZWN0IHdpdGggdGhlIGNpdHkgY29vcmRpbmF0ZXNcbiAgICAgKi9cblxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXG4gICAgICAgIGBodHRwOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9nZW8vMS4wL2RpcmVjdD9xPSR7bG9jYXRpb259JmxpbWl0PTUmYXBwaWQ9JHtBUElfS0VZfWBcbiAgICApO1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihyZXNwb25zZS5zdGF0dXMpO1xuICAgIH1cbn07XG5cbmV4cG9ydCBjb25zdCBnZXRDb29yZGluYXRlc0Zyb21DaXR5TmFtZSA9IGFzeW5jIChsb2MpID0+IHtcbiAgICAvKipcbiAgICAgKiBHZXQgY29vcmRpbmF0ZXMgdmFsdWVzIGZyb20gYSBjaXR5IG5hbWVcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBsb2Mge2NpdHkgbmFtZX0sIHtzdGF0ZX0sIHtjb3VudHJ5IGNvZGV9XG4gICAgICpcbiAgICAgKiBEb2N1bWVudGF0aW9uOiBodHRwczovL29wZW53ZWF0aGVybWFwLm9yZy9hcGkvZ2VvY29kaW5nLWFwaVxuICAgICAqXG4gICAgICogQHJldHVybnMge09iamVjdH0gb2JqZWN0IHdpdGggdGhlIGNpdHkgY29vcmRpbmF0ZXNcbiAgICAgKi9cblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBzZWFyY2hMb2NhdGlvbkRhdGEobG9jKTtcbiAgICBjb25zdCBsb24gPSBkYXRhWzBdLmxvbjtcbiAgICBjb25zdCBsYXQgPSBkYXRhWzBdLmxhdDtcbiAgICAvLyBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAvLyBjb25zb2xlLmxvZyhsb24sIGxhdCk7XG4gICAgcmV0dXJuIHsgbG9uOiBsb24sIGxhdDogbGF0IH07XG59O1xuXG5jb25zdCBzZWFyY2hDaXR5ID0gYXN5bmMgKGxvbiwgbGF0KSA9PiB7XG4gICAgLyoqXG4gICAgICogU2VhcmNoIGEgY2l0eSBpbmZvIGZyb20gaXRzIGNvb3JkaW5hdGVzLlxuICAgICAqXG4gICAgICogQVBJIEtleSBmcm9tIG5pY285NTA2IHVzZXIsIE9wZW53ZWF0aGVybWFwXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbG9uIGxvbmdpdHVkZSB2YWx1ZVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBsYXQgbGF0aXR1ZGUgdmFsdWVcbiAgICAgKlxuICAgICAqIERvY3VtZW50YXRpb246IGh0dHBzOi8vb3BlbndlYXRoZXJtYXAub3JnL2FwaS9nZW9jb2RpbmctYXBpXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gb2JqZWN0IHdpdGggdGhlIGNpdHkgaW5mb1xuICAgICAqL1xuXG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcbiAgICAgICAgYGh0dHA6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2dlby8xLjAvcmV2ZXJzZT9sYXQ9JHtsYXR9Jmxvbj0ke2xvbn0mbGltaXQ9MSZhcHBpZD0ke0FQSV9LRVl9YFxuICAgICk7XG4gICAgdHJ5IHtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcbiAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKHJlc3BvbnNlLnN0YXR1cyk7XG4gICAgfVxufTtcblxuZXhwb3J0IGNvbnN0IGdldExvY2F0aW9uRnJvbUNvb3JkaW5hdGVzID0gYXN5bmMgKGxvbiwgbGF0KSA9PiB7XG4gICAgLyoqXG4gICAgICogR2V0IGEgY2l0eSBpbmZvIGZyb20gaXRzIGNvb3JkaW5hdGVzLlxuICAgICAqXG4gICAgICogQVBJIEtleSBmcm9tIG5pY285NTA2IHVzZXIsIE9wZW53ZWF0aGVybWFwXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbG9uIGxvbmdpdHVkZSB2YWx1ZVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBsYXQgbGF0aXR1ZGUgdmFsdWVcbiAgICAgKlxuICAgICAqIERvY3VtZW50YXRpb246IGh0dHBzOi8vb3BlbndlYXRoZXJtYXAub3JnL2FwaS9nZW9jb2RpbmctYXBpXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7T2JqZWN0fSBvYmplY3Qgd2l0aCB0aGUgY2l0eSBpbmZvIHtuYW1lLCBzdGF0ZSwgY291bnRyeX1cbiAgICAgKi9cblxuICAgIGNvbnN0IGRhdGEgPSBhd2FpdCBzZWFyY2hDaXR5KGxvbiwgbGF0KTtcbiAgICBjb25zdCBuYW1lID0gZGF0YVswXS5uYW1lO1xuICAgIGNvbnN0IHN0YXRlID0gZGF0YVswXS5zdGF0ZTtcbiAgICBjb25zdCBjb3VudHJ5ID0gZGF0YVswXS5jb3VudHJ5O1xuICAgIC8vIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgIHJldHVybiB7IG5hbWUsIHN0YXRlLCBjb3VudHJ5IH07XG59O1xuXG5jb25zdCByZXF1ZXN0V2VhdGhlckluZm8gPSBhc3luYyAobG9uLCBsYXQsIHVuaXRzID0gXCJtZXRyaWNcIikgPT4ge1xuICAgIC8qKlxuICAgICAqIFJlcXVlc3Qgd2VhdGhlciBpbmZvcm1hdGlvbiBmcm9tIGEgY2l0eSBjb29yZGluYXRlc1xuICAgICAqXG4gICAgICogQVBJIEtleSBmcm9tIG5pY285NTA2IHVzZXIsIE9wZW53ZWF0aGVybWFwXG4gICAgICpcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gbG9uIGxvbmdpdHVkZSB2YWx1ZVxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBsYXQgbGF0aXR1ZGUgdmFsdWVcbiAgICAgKlxuICAgICAqIERvY3VtZW50YXRpb246IGh0dHBzOi8vb3BlbndlYXRoZXJtYXAub3JnL2FwaS9nZW9jb2RpbmctYXBpXG4gICAgICpcbiAgICAgKiBsYXQgXHQocmVxdWlyZWQpIFx0TGF0aXR1ZGUuIElmIHlvdSBuZWVkIHRoZSBnZW9jb2RlciB0byBhdXRvbWF0aWMgY29udmVydCBjaXR5IG5hbWVzIGFuZCB6aXAtY29kZXMgdG8gZ2VvIGNvb3JkaW5hdGVzIGFuZCB0aGUgb3RoZXIgd2F5IGFyb3VuZCwgcGxlYXNlIHVzZSBvdXIgR2VvY29kaW5nIEFQSVxuICAgICAqIGxvbiBcdChyZXF1aXJlZCkgXHRMb25naXR1ZGUuIElmIHlvdSBuZWVkIHRoZSBnZW9jb2RlciB0byBhdXRvbWF0aWMgY29udmVydCBjaXR5IG5hbWVzIGFuZCB6aXAtY29kZXMgdG8gZ2VvIGNvb3JkaW5hdGVzIGFuZCB0aGUgb3RoZXIgd2F5IGFyb3VuZCwgcGxlYXNlIHVzZSBvdXIgR2VvY29kaW5nIEFQSVxuICAgICAqIGFwcGlkIFx0KHJlcXVpcmVkKSBcdFlvdXIgdW5pcXVlIEFQSSBrZXkgKHlvdSBjYW4gYWx3YXlzIGZpbmQgaXQgb24geW91ciBhY2NvdW50IHBhZ2UgdW5kZXIgdGhlIFwiQVBJIGtleVwiIHRhYilcbiAgICAgKiBtb2RlIFx0KG9wdGlvbmFsKSBcdFJlc3BvbnNlIGZvcm1hdC4gUG9zc2libGUgdmFsdWVzIGFyZSB4bWwgYW5kIGh0bWwuIElmIHlvdSBkb24ndCB1c2UgdGhlIG1vZGUgcGFyYW1ldGVyIGZvcm1hdCBpcyBKU09OIGJ5IGRlZmF1bHQuIExlYXJuIG1vcmVcbiAgICAgKiB1bml0cyBcdChvcHRpb25hbCkgXHRVbml0cyBvZiBtZWFzdXJlbWVudC4gc3RhbmRhcmQsIG1ldHJpYyBhbmQgaW1wZXJpYWwgdW5pdHMgYXJlIGF2YWlsYWJsZS4gSWYgeW91IGRvIG5vdCB1c2UgdGhlIHVuaXRzIHBhcmFtZXRlciwgc3RhbmRhcmQgdW5pdHMgd2lsbCBiZSBhcHBsaWVkIGJ5IGRlZmF1bHQuXG4gICAgICogbGFuZyBcdChvcHRpb25hbCkgXHRZb3UgY2FuIHVzZSB0aGlzIHBhcmFtZXRlciB0byBnZXQgdGhlIG91dHB1dCBpbiB5b3VyIGxhbmd1YWdlLiBMZWFybiBtb3JlXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyB7UHJvbWlzZX0gb2JqZWN0IHdpdGggdGhlIGNpdHkgd2VhdGhlciBpbmZvXG4gICAgICovXG5cbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFxuICAgICAgICBgaHR0cHM6Ly9hcGkub3BlbndlYXRoZXJtYXAub3JnL2RhdGEvMi41L3dlYXRoZXI/bGF0PSR7bGF0fSZsb249JHtsb259JmFwcGlkPSR7QVBJX0tFWX0mdW5pdHM9JHt1bml0c31gXG4gICAgKTtcblxuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIHJldHVybiBkYXRhO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihyZXNwb25zZS5zdGF0dXMpO1xuICAgIH1cbn07XG5cbmV4cG9ydCBjb25zdCBnZXRXZWF0aGVySW5mbyA9IGFzeW5jIChsb24sIGxhdCwgdW5pdHMgPSBcIm1ldHJpY1wiKSA9PiB7XG4gICAgLyoqXG4gICAgICogR2V0IGEgY2l0eSB3ZWF0aGVyIGluZm8gZnJvbSBpdHMgY29vcmRpbmF0ZXMuXG4gICAgICpcbiAgICAgKiBBUEkgS2V5IGZyb20gbmljbzk1MDYgdXNlciwgT3BlbndlYXRoZXJtYXBcbiAgICAgKlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBsb24gbG9uZ2l0dWRlIHZhbHVlXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IGxhdCBsYXRpdHVkZSB2YWx1ZVxuICAgICAqXG4gICAgICogRG9jdW1lbnRhdGlvbjogaHR0cHM6Ly9vcGVud2VhdGhlcm1hcC5vcmcvYXBpL2dlb2NvZGluZy1hcGlcbiAgICAgKlxuICAgICAqIEByZXR1cm5zIHtPYmplY3R9IG9iamVjdCB3aXRoIHRoZSBjaXR5IHdlYXRoZXIgaW5mbyB7fVxuICAgICAqL1xuXG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlcXVlc3RXZWF0aGVySW5mbyhsb24sIGxhdCwgdW5pdHMpO1xuICAgIC8vIGNvbnNvbGUubG9nKGRhdGEpO1xuICAgIHJldHVybiBkYXRhO1xufTtcblxuY29uc3QgdW5peFRvRGF0ZSA9ICh1bml4VGltZXN0YW1wKSA9PiB7XG4gICAgLyoqXG4gICAgICogQ29udmVydHMgYW4gVU5JWCB0aW1lc3RhbXAgdG8gYSByZWFkYWJsZSBkYXRlIGZvcm1hdFxuICAgICAqL1xuICAgIC8vIENyZWF0ZSBhIG5ldyBKYXZhU2NyaXB0IERhdGUgb2JqZWN0IGJhc2VkIG9uIHRoZSB0aW1lc3RhbXBcbiAgICAvLyBtdWx0aXBsaWVkIGJ5IDEwMDAgc28gdGhhdCB0aGUgYXJndW1lbnQgaXMgaW4gbWlsbGlzZWNvbmRzLCBub3Qgc2Vjb25kc1xuICAgIGNvbnN0IGRhdGUgPSBuZXcgRGF0ZSh1bml4VGltZXN0YW1wICogMTAwMCk7XG5cbiAgICAvLyBIb3VycyBwYXJ0IGZyb20gdGhlIHRpbWVzdGFtcFxuICAgIGNvbnN0IGhvdXJzID0gZGF0ZS5nZXRIb3VycygpO1xuXG4gICAgLy8gTWludXRlcyBwYXJ0IGZyb20gdGhlIHRpbWVzdGFtcFxuICAgIGNvbnN0IG1pbnV0ZXMgPSBcIjBcIiArIGRhdGUuZ2V0TWludXRlcygpO1xuXG4gICAgLy8gU2Vjb25kcyBwYXJ0IGZyb20gdGhlIHRpbWVzdGFtcFxuICAgIGNvbnN0IHNlY29uZHMgPSBcIjBcIiArIGRhdGUuZ2V0U2Vjb25kcygpO1xuXG4gICAgLy8gV2lsbCBkaXNwbGF5IHRpbWUgaW4gMTA6MzA6MjMgZm9ybWF0XG4gICAgY29uc3QgZm9ybWF0dGVkVGltZSA9XG4gICAgICAgIGhvdXJzICsgXCI6XCIgKyBtaW51dGVzLnNsaWNlKC0yKSArIFwiOlwiICsgc2Vjb25kcy5zbGljZSgtMik7XG5cbiAgICByZXR1cm4gZm9ybWF0dGVkVGltZTtcbn07XG5cbmNvbnN0IGRlZ3JlZXNUb0RpcmVjdGlvbiA9IChkZWdyZWVzKSA9PiB7XG4gICAgLyoqXG4gICAgICogQ29udmVydHMgZGVncmVlcyAobWV0ZW9yb2xvZ2ljYWwpIHRvIHdpbmQgZGlyZWN0aW9uXG4gICAgICogUmV0dXJucyBhIFN0cmluZ1xuICAgICAqL1xuICAgIGlmIChkZWdyZWVzID49IDM0NSAmJiBkZWdyZWVzIDw9IDM2MCAmJiBkZWdyZWVzIDwgMTUpIHJldHVybiBcIk5cIjtcbiAgICBpZiAoZGVncmVlcyA+PSAxNSAmJiBkZWdyZWVzIDwgMzUpIHJldHVybiBcIk4vTkVcIjtcbiAgICBpZiAoZGVncmVlcyA+PSAzNSAmJiBkZWdyZWVzIDwgNTUpIHJldHVybiBcIk5FXCI7XG4gICAgaWYgKGRlZ3JlZXMgPj0gNTUgJiYgZGVncmVlcyA8IDc1KSByZXR1cm4gXCJFL05FXCI7XG4gICAgaWYgKGRlZ3JlZXMgPj0gNzUgJiYgZGVncmVlcyA8IDEwNSkgcmV0dXJuIFwiRVwiO1xuICAgIGlmIChkZWdyZWVzID49IDEwNSAmJiBkZWdyZWVzIDwgMTI1KSByZXR1cm4gXCJFL1NFXCI7XG4gICAgaWYgKGRlZ3JlZXMgPj0gMTI1ICYmIGRlZ3JlZXMgPCAxNDUpIHJldHVybiBcIlNFXCI7XG4gICAgaWYgKGRlZ3JlZXMgPj0gMTQ1ICYmIGRlZ3JlZXMgPCAxNjUpIHJldHVybiBcIlMvU0VcIjtcbiAgICBpZiAoZGVncmVlcyA+PSAxNjUgJiYgZGVncmVlcyA8IDE5NSkgcmV0dXJuIFwiU1wiO1xuICAgIGlmIChkZWdyZWVzID49IDE5NSAmJiBkZWdyZWVzIDwgMjE1KSByZXR1cm4gXCJTL1NXXCI7XG4gICAgaWYgKGRlZ3JlZXMgPj0gMjE1ICYmIGRlZ3JlZXMgPCAyMzUpIHJldHVybiBcIlNXXCI7XG4gICAgaWYgKGRlZ3JlZXMgPj0gMjM1ICYmIGRlZ3JlZXMgPCAyNTUpIHJldHVybiBcIlcvU1dcIjtcbiAgICBpZiAoZGVncmVlcyA+PSAyNTUgJiYgZGVncmVlcyA8IDI4NSkgcmV0dXJuIFwiV1wiO1xuICAgIGlmIChkZWdyZWVzID49IDI4NSAmJiBkZWdyZWVzIDwgMzA1KSByZXR1cm4gXCJXL05XXCI7XG4gICAgaWYgKGRlZ3JlZXMgPj0gMzA1ICYmIGRlZ3JlZXMgPCAzMjUpIHJldHVybiBcIk5XXCI7XG4gICAgaWYgKGRlZ3JlZXMgPj0gMzI1ICYmIGRlZ3JlZXMgPCAzNDUpIHJldHVybiBcIk4vTldcIjtcblxuICAgIHJldHVybiBcIlwiO1xufTtcbiIsImltcG9ydCB7XG4gICAgZ2V0Q29vcmRpbmF0ZXNGcm9tQ2l0eU5hbWUsXG4gICAgZ2V0TG9jYXRpb25Gcm9tQ29vcmRpbmF0ZXMsXG4gICAgZ2V0V2VhdGhlckluZm8sXG59IGZyb20gXCIuL0FQSVV0aWxpdGllc1wiO1xuXG5leHBvcnQgY29uc3QgdXBkYXRlV2VhdGhlck9uU2NyZWVuID0gYXN5bmMgKGV2ZW50KSA9PiB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuICAgIGNvbnN0IHNlYXJjaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiaW5wdXRfY2l0eVwiKS52YWx1ZTtcbiAgICBjb25zdCBjaXR5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaXR5X3RpdGxlXCIpO1xuICAgIGNvbnN0IHRlbXAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImN1cnJlbnRfdGVtcFwiKTtcblxuICAgIGNvbnN0IGNpdHlDb29yZCA9IGF3YWl0IGdldENvb3JkaW5hdGVzRnJvbUNpdHlOYW1lKHNlYXJjaCk7XG5cbiAgICBjb25zdCBjaXR5TG9jID0gYXdhaXQgZ2V0TG9jYXRpb25Gcm9tQ29vcmRpbmF0ZXMoXG4gICAgICAgIGNpdHlDb29yZC5sb24sXG4gICAgICAgIGNpdHlDb29yZC5sYXRcbiAgICApO1xuICAgIGNpdHkudGV4dENvbnRlbnQgPSBgJHtjaXR5TG9jLm5hbWV9LCAke2NpdHlMb2Muc3RhdGV9LCAke2NpdHlMb2MuY291bnRyeX1gO1xuXG4gICAgY29uc3QgY2l0eUluZm8gPSBhd2FpdCBnZXRXZWF0aGVySW5mbyhjaXR5Q29vcmQubG9uLCBjaXR5Q29vcmQubGF0KTtcbiAgICB0ZW1wLnRleHRDb250ZW50ID0gYEN1cnJlbnQgdGVtcGVyYXR1cmU6ICR7Y2l0eUluZm8ubWFpbi50ZW1wfSBDYDtcblxuICAgIGNvbnNvbGUubG9nKGNpdHlJbmZvKTtcbn07XG4iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgeyBjcmVhdGVGb290ZXIsIGNyZWF0ZUlucHV0Rm9ybSwgY3JlYXRlT3V0cHV0RmllbGRzIH0gZnJvbSBcIi4vaG9tZVwiO1xuaW1wb3J0IFwiLi9zdHlsZS5jc3NcIjtcblxuKGZ1bmN0aW9uIGdlbmVyYXRlV2ViUGFnZSgpIHtcbiAgICAvKipcbiAgICAgKiBMb2FkIHRoZSBjb21wb25lbnRzIHRvIGNyZWF0ZSBhbmQgc2hvdyB0aGUgSFRNTCBlbGVtZW50c1xuICAgICAqL1xuXG4gICAgY29uc3QgYm9keSA9IGRvY3VtZW50LmJvZHk7XG5cbiAgICBib2R5LmFwcGVuZENoaWxkKGNyZWF0ZUlucHV0Rm9ybSgpKTtcbiAgICBib2R5LmFwcGVuZENoaWxkKGNyZWF0ZU91dHB1dEZpZWxkcygpKTtcbiAgICBib2R5LmFwcGVuZENoaWxkKGNyZWF0ZUZvb3RlcigpKTtcbn0pKCk7XG4iLCJpbXBvcnQgeyB1cGRhdGVXZWF0aGVyT25TY3JlZW4gfSBmcm9tIFwiLi9tb2RlbFwiO1xuaW1wb3J0IGdpdGh1Ykljb24gZnJvbSBcIi4vYXNzZXRzL2dpdGh1Yi5zdmdcIjtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUlucHV0Rm9ybSA9ICgpID0+IHtcbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyB7SFRNTEVsZW1lbnR9IENvbnRhaW5lciB3aXRoIGZvcm0gZWxlbWVudHMgdG8gY2F0Y2ggdXNlciBpbnB1dFxuICAgICAqIHtDaXR5IG5hbWV9XG4gICAgICovXG5cbiAgICBjb25zdCBjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xuICAgIGNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKFwiZm9ybS1jb250YWluZXJcIik7XG5cbiAgICBjb25zdCBmb3JtVGl0bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaDJcIik7XG4gICAgZm9ybVRpdGxlLnRleHRDb250ZW50ID0gXCJMb29rIGZvciBhIGNpdHlcIjtcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoZm9ybVRpdGxlKTtcblxuICAgIGNvbnN0IGZvcm1TdWJ0aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoNFwiKTtcbiAgICBmb3JtU3VidGl0bGUudGV4dENvbnRlbnQgPSBcIntDaXR5IG5hbWV9LCB7U3RhdGV9LCB7Q291bnRyeSBjb2RlfVwiO1xuICAgIGNvbnRhaW5lci5hcHBlbmRDaGlsZChmb3JtU3VidGl0bGUpO1xuXG4gICAgY29uc3QgZm9ybSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIpO1xuXG4gICAgY29uc3QgbGFiZWxDaXR5U2VhcmNoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxhYmVsXCIpO1xuICAgIGxhYmVsQ2l0eVNlYXJjaC5zZXRBdHRyaWJ1dGUoXCJmb3JcIiwgXCJpbnB1dF9jaXR5XCIpO1xuICAgIGxhYmVsQ2l0eVNlYXJjaC50ZXh0Q29udGVudCA9IFwiTG9jYXRpb25cIjtcbiAgICBmb3JtLmFwcGVuZENoaWxkKGxhYmVsQ2l0eVNlYXJjaCk7XG5cbiAgICBjb25zdCBpbnB1dENpdHkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG4gICAgaW5wdXRDaXR5LnR5cGUgPSBcInRleHRcIjtcbiAgICBpbnB1dENpdHkuaWQgPSBcImlucHV0X2NpdHlcIjtcbiAgICBpbnB1dENpdHkubmFtZSA9IFwiaW5wdXRfY2l0eVwiO1xuICAgIGlucHV0Q2l0eS5wbGFjZWhvbGRlciA9IFwiTWVsYm91cm5lLCBBVVwiO1xuICAgIGZvcm0uYXBwZW5kQ2hpbGQoaW5wdXRDaXR5KTtcblxuICAgIGNvbnN0IGJ0blN1Ym1pdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcbiAgICBidG5TdWJtaXQudHlwZSA9IFwic3VibWl0XCI7XG4gICAgYnRuU3VibWl0LnZhbHVlID0gXCJTZWFyY2hcIjtcbiAgICBidG5TdWJtaXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHVwZGF0ZVdlYXRoZXJPblNjcmVlbik7XG4gICAgZm9ybS5hcHBlbmRDaGlsZChidG5TdWJtaXQpO1xuXG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGZvcm0pO1xuXG4gICAgcmV0dXJuIGNvbnRhaW5lcjtcbn07XG5cbmV4cG9ydCBjb25zdCBjcmVhdGVPdXRwdXRGaWVsZHMgPSAoKSA9PiB7XG4gICAgLyoqXG4gICAgICogQHJldHVybnMge0hUTUxFbGVtZW50fSBDb250YWluZXIgd2l0aCBmb3JtIGVsZW1lbnRzIHRvIHNob3cgdGhlIHdlYXRoZXIgaW5mb1xuICAgICAqL1xuXG4gICAgY29uc3QgY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKTtcbiAgICBjb250YWluZXIuY2xhc3NMaXN0LmFkZChcIndlYXRoZXItY29udGFpbmVyXCIpO1xuXG4gICAgY29uc3QgY2l0eSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMVwiKTtcbiAgICBjaXR5LmlkID0gXCJjaXR5X3RpdGxlXCI7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGNpdHkpO1xuXG4gICAgY29uc3QgY3VycmVudFRlbXBlcmF0dXJlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImgzXCIpO1xuICAgIGN1cnJlbnRUZW1wZXJhdHVyZS5pZCA9IFwiY3VycmVudF90ZW1wXCI7XG4gICAgY29udGFpbmVyLmFwcGVuZENoaWxkKGN1cnJlbnRUZW1wZXJhdHVyZSk7XG5cbiAgICByZXR1cm4gY29udGFpbmVyO1xufTtcblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUZvb3RlciA9ICgpID0+IHtcbiAgICAvKipcbiAgICAgKiBDcmVhdGVzIHRoZSBmb290ZXIgZWxlbWVudCBhbmQgcmV0dXJucyB0aGUgSFRNTCBlbGVtZW50XG4gICAgICovXG4gICAgY29uc3QgR0lUSFVCX1VTRVIgPSBcIm5pY285NTA2XCI7XG4gICAgY29uc3QgR0lUSFVCX1JFUE9fVVJMID0gXCJodHRwczovL2dpdGh1Yi5jb20vbmljbzk1MDYvVE9QLXdlYXRoZXItYXBwXCI7XG5cbiAgICBjb25zdCBmb290ZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZm9vdGVyXCIpO1xuXG4gICAgLy8gRElWIHRvIGtlZXAgdG9nZXRoZXIgdGhlIEdpdEh1YiBsb2dvIGFuZCB0aGUgdXNlcm5hbWVcbiAgICBjb25zdCBnaXRodWJMaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImFcIik7XG4gICAgZ2l0aHViTGluay5jbGFzc0xpc3QuYWRkKFwiZ2l0aHViLWNvbnRhY3QtaW5mb1wiKTtcbiAgICBnaXRodWJMaW5rLmhyZWYgPSBHSVRIVUJfUkVQT19VUkw7XG4gICAgZ2l0aHViTGluay50YXJnZXQgPSBcIl9ibGFua1wiO1xuXG4gICAgY29uc3QgbG9nbyA9IG5ldyBJbWFnZSgpO1xuICAgIGxvZ28uc3JjID0gZ2l0aHViSWNvbjtcbiAgICBsb2dvLmNsYXNzTGlzdC5hZGQoXCJmb290ZXItbG9nb1wiKTtcbiAgICBnaXRodWJMaW5rLmFwcGVuZENoaWxkKGxvZ28pO1xuXG4gICAgY29uc3QgZ2l0aHViVXNlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJoMVwiKTtcbiAgICBnaXRodWJVc2VyLmNsYXNzTGlzdC5hZGQoXCJnaXRodWItdXNlclwiKTtcbiAgICBnaXRodWJVc2VyLmlkID0gXCJnaXRodWJVc2VyXCI7XG4gICAgZ2l0aHViVXNlci50ZXh0Q29udGVudCA9IEdJVEhVQl9VU0VSO1xuICAgIGdpdGh1YkxpbmsuYXBwZW5kQ2hpbGQoZ2l0aHViVXNlcik7XG5cbiAgICBmb290ZXIuYXBwZW5kQ2hpbGQoZ2l0aHViTGluayk7XG5cbiAgICByZXR1cm4gZm9vdGVyO1xufTtcbiJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJuIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJ0ZXN0IiwicmVwbGFjZSIsInAiLCJuYyIsIkFQSV9LRVkiLCJ1cGRhdGVXZWF0aGVyT25TY3JlZW4iLCJhc3luYyIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJzZWFyY2giLCJnZXRFbGVtZW50QnlJZCIsInZhbHVlIiwiY2l0eSIsInRlbXAiLCJjaXR5Q29vcmQiLCJsb2MiLCJyZXNwb25zZSIsImZldGNoIiwianNvbiIsImVycm9yIiwic3RhdHVzIiwic2VhcmNoTG9jYXRpb25EYXRhIiwibG9uIiwibGF0IiwiZ2V0Q29vcmRpbmF0ZXNGcm9tQ2l0eU5hbWUiLCJjaXR5TG9jIiwic2VhcmNoQ2l0eSIsIm5hbWUiLCJzdGF0ZSIsImNvdW50cnkiLCJnZXRMb2NhdGlvbkZyb21Db29yZGluYXRlcyIsInRleHRDb250ZW50IiwiY2l0eUluZm8iLCJ1bml0cyIsInJlcXVlc3RXZWF0aGVySW5mbyIsImdldFdlYXRoZXJJbmZvIiwibWFpbiIsImNvbnNvbGUiLCJsb2ciLCJsb2NhbHMiLCJib2R5IiwiY29udGFpbmVyIiwiY2xhc3NMaXN0IiwiYWRkIiwiZm9ybVRpdGxlIiwiZm9ybVN1YnRpdGxlIiwiZm9ybSIsImxhYmVsQ2l0eVNlYXJjaCIsImlucHV0Q2l0eSIsInR5cGUiLCJwbGFjZWhvbGRlciIsImJ0blN1Ym1pdCIsImFkZEV2ZW50TGlzdGVuZXIiLCJjcmVhdGVJbnB1dEZvcm0iLCJjdXJyZW50VGVtcGVyYXR1cmUiLCJjcmVhdGVPdXRwdXRGaWVsZHMiLCJmb290ZXIiLCJnaXRodWJMaW5rIiwiaHJlZiIsImxvZ28iLCJJbWFnZSIsImdpdGh1YlVzZXIiLCJjcmVhdGVGb290ZXIiXSwic291cmNlUm9vdCI6IiJ9